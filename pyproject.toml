[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "beancount-importers"
version = "0.1.0"
description = "A collection of importers for Beancount"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Carlos Vigo", email = "carviher1990@gmail.com"},
]
maintainers = [
    {name = "Carlos Vigo", email = "carviher1990@gmail.com"},
]
keywords = ["beancount", "importers", "accounting", "finance"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = "==3.12.*"
dependencies = [
    "beancount>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "coverage>=7.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "coverage>=7.0.0",
]

[project.scripts]
beancount-import = "beancount_importers.cli:main"

[project.urls]
Homepage = "https://github.com/c-vigo/beancount-importers"
Documentation = "https://beancount-importers.readthedocs.io/"
Repository = "https://github.com/c-vigo/beancount-importers"
"Bug Tracker" = "https://github.com/c-vigo/beancount-importers/issues"
Changelog = "https://github.com/c-vigo/beancount-importers/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
beancount_importers = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["beancount_importers"]
src_paths = [".", "tests"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".tox",
    ".mypy_cache",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=beancount_importers",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["beancount_importers"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311, py312, lint, docs
isolated_build = True

[testenv]
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
    pytest-asyncio>=0.21.0
    coverage>=7.0.0
commands =
    pytest {posargs:tests}

[testenv:lint]
deps =
    black>=23.0.0
    isort>=5.12.0
    flake8>=6.0.0
    mypy>=1.0.0
commands =
    black --check --diff src tests
    isort --check-only --diff src tests
    flake8 src tests
    mypy src

[testenv:docs]
deps =
    sphinx>=6.0.0
    sphinx-rtd-theme>=1.2.0
    myst-parser>=1.0.0
commands =
    sphinx-build -b html docs docs/_build/html
"""
