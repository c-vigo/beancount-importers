[build-system]
requires = ["setuptools==68.2.2", "wheel==0.41.2"]
build-backend = "setuptools.build_meta"

[project]
name = "beancount-importers"
version = "0.1.0"
description = "A collection of importers for Beancount"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Carlos Vigo", email = "carviher1990@gmail.com" }]
maintainers = [{ name = "Carlos Vigo", email = "carviher1990@gmail.com" }]
keywords = ["beancount", "importers", "accounting", "finance"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = "==3.12.*"
dependencies = ["beancount==3.1.0", "beangulp==0.2.0", "python-dateutil==2.8.2"]

[project.optional-dependencies]
dev = [
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
    "pytest-mock==3.14.1",
    "ruff==0.12.10",
    "mypy==1.17.0",
    "pre-commit==4.3.0",
    "coverage==7.10.5",
]

[project.urls]
Homepage = "https://github.com/c-vigo/beancount-importers"
Documentation = "https://beancount-importers.readthedocs.io/"
Repository = "https://github.com/c-vigo/beancount-importers"
"Bug Tracker" = "https://github.com/c-vigo/beancount-importers/issues"
Changelog = "https://github.com/c-vigo/beancount-importers/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
beancount_importers = ["py.typed"]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E203", # whitespace before ':'
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["beancount_importers"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=beancount_importers",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["beancount_importers"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
